<%# views/dashboard.ejs %>
<%- /* Main interface view after login and registration */ %>
<%- contentFor('body') %>

<h1 class="text-3xl font-bold text-primary border-b-2 border-primary pb-3 mb-6">Dip Adjudicator Interface</h1>

<% if (typeof error !== 'undefined' && error) { %>
    <div class="bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-md mb-6">
        <strong>Error:</strong> <%= error %>
    </div>
<% } %>

<!-- Top Control Bar: Game Selection & Password -->
<div class="card mb-6">
    <div class="flex flex-wrap items-center gap-4">
        <div class="flex-grow sm:flex-grow-0">
            <label for="game-selector" class="block text-sm font-medium text-gray-700 mb-1">Target Game:</label>
            <select id="game-selector" class="input">
                <option value="">-- Select Target Game --</option>
                <% if (typeof allGames !== 'undefined' && allGames.length > 0) { %>
                    <% allGames.forEach(function(game) { %>
                        <option value="<%= game.name %>" <%= (typeof initialTargetGame !== 'undefined' && initialTargetGame && initialTargetGame.name === game.name) ? 'selected' : '' %>>
                            <%= game.name %> (<%= game.status || 'Unknown' %>)
                        </option>
                    <% }); %>
                <% } else { %>
                    <option value="" disabled>No games found</option>
                <% } %>
            </select>
            <input type="hidden" id="target-game-input" value="<%= (typeof initialTargetGame !== 'undefined' && initialTargetGame) ? initialTargetGame.name : '' %>">
        </div>
        <div class="flex-grow sm:flex-grow-0">
            <label for="target-password" class="block text-sm font-medium text-gray-700 mb-1">Game Password:</label>
            <input type="password" id="target-password" placeholder="Enter password for target game" class="input">
            <p class="text-xs text-gray-500 mt-1">Needed for game-specific commands.</p>
        </div>
        <div class="flex-grow sm:flex-grow-0"> <%# New Variant Field %>
            <label for="target-variant" class="block text-sm font-medium text-gray-700 mb-1">Variant (optional):</label>
            <input type="text" id="target-variant" placeholder="e.g., chaos, ancient_med" class="input">
            <p class="text-xs text-gray-500 mt-1">Specify if not standard variant.</p>
        </div>
        <div class="flex items-end space-x-2 mt-2 sm:mt-0">
             <button id="refresh-game-state" title="Refresh selected game state" class="btn btn-secondary text-sm py-1.5 px-3">Refresh State</button>
             <button id="clear-credentials" title="Clear selected game and stored password" class="btn btn-secondary text-sm py-1.5 px-3 bg-red-600 hover:bg-red-700 text-white">Clear Target</button>
        </div>
    </div>
     <p class="text-xs text-orange-600 mt-2">Warning: Game password and variant stored in browser cookie for convenience. Clear target/sign out to remove.</p>
</div>


<div class="grid grid-cols-1 lg:grid-cols-12 gap-6">
    <!-- Generator Controls (Left Column) -->
    <div class="lg:col-span-3">
        <div class="card">
            <h2 class="text-xl font-semibold text-primary border-b border-gray-200 pb-3 mb-4">Command Generator</h2>
            <label for="command-type" class="block text-sm font-medium text-gray-700 mb-2">Action:</label>
            <select id="command-type" class="input mb-4">
                <option value="">-- Select Action --</option>
                <%# Options will be populated by client.js based on recommendations %>
                <% if (typeof initialRecommendedCommands !== 'undefined') { %>
                    <% const commands = initialRecommendedCommands; %>
                    <% if (commands.recommended && commands.recommended.length > 0) { %>
                    <optgroup label="Recommended" class="font-semibold bg-gray-100">
                        <% commands.recommended.forEach(function(cmd) { %><option value="<%= cmd %>"><%= cmd %></option><% }); %>
                    </optgroup>
                    <% } %>
                    <% if (commands.playerActions && commands.playerActions.length > 0) { %>
                    <optgroup label="Player Actions" class="font-semibold bg-gray-100">
                        <% commands.playerActions.forEach(function(cmd) { %><% if (cmd !== 'REGISTER') { %><option value="<%= cmd %>"><%= cmd %></option><% } %><% }); %>
                    </optgroup>
                    <% } %>
                     <% if (commands.settings && commands.settings.length > 0) { %>
                    <optgroup label="Settings & Future Orders" class="font-semibold bg-gray-100">
                        <% commands.settings.forEach(function(cmd) { %><option value="<%= cmd %>"><%= cmd %></option><% }); %>
                    </optgroup>
                    <% } %>
                    <% if (commands.gameInfo && commands.gameInfo.length > 0) { %>
                    <optgroup label="Game Info" class="font-semibold bg-gray-100">
                        <% commands.gameInfo.forEach(function(cmd) { %><option value="<%= cmd %>"><%= cmd %></option><% }); %>
                    </optgroup>
                    <% } %>
                    <% if (commands.master && commands.master.length > 0) { %>
                    <optgroup label="Master Only" class="font-semibold bg-gray-100">
                        <% commands.master.forEach(function(cmd) { %><option value="<%= cmd %>"><%= cmd %></option><% }); %>
                    </optgroup>
                    <% } %>
                    <% if (commands.general && commands.general.length > 0) { %>
                    <optgroup label="General" class="font-semibold bg-gray-100">
                        <% commands.general.forEach(function(cmd) { %><% if (cmd !== 'REGISTER') { %><option value="<%= cmd %>"><%= cmd %></option><% } %><% }); %>
                    </optgroup>
                    <% } %>
                <% } %>
            </select>

            <!-- Dynamic Options Area -->
            <div id="command-options-area" class="border-t border-gray-200 pt-4 mt-4 min-h-[50px]">
                 <p class="text-sm text-gray-500 italic">Select an action above to see options.</p>
            </div>
        </div>
    </div>

    <!-- Main Content (Center Column) -->
    <div class="lg:col-span-6">
        <div class="card">
            <h2 class="text-xl font-semibold text-primary border-b border-gray-200 pb-3 mb-4">Manual Command / Generated Output</h2>
            <label for="generated-command" class="block text-sm font-medium text-gray-700 mb-2">Command Text (Press Enter to Send):</label>
            <textarea id="generated-command" placeholder="Select action or type command manually. Do NOT include SIGN OFF."
                      class="input font-mono text-sm min-h-[150px] mb-4 resize-y"></textarea> <%# Added resize-y %>
            <button id="send-command" class="btn btn-primary">Send Command</button>
        </div>

        <div class="card mt-6">
            <h2 class="text-xl font-semibold text-primary border-b border-gray-200 pb-3 mb-4">Adjudicator Output</h2>
            <div id="output" class="bg-gray-50 border border-gray-200 rounded-md p-4 font-mono text-sm min-h-[250px] max-h-[600px] overflow-y-auto whitespace-pre-wrap break-words text-gray-700">
                Output will appear here... Select a target game and try the LIST command.
            </div>
        </div>
    </div>

    <!-- Sidebar (Right Column) -->
    <div class="lg:col-span-3">
        <div class="card min-h-[300px]"> <%# Added min-height %>
            <div id="game-state-sidebar">
                 <%# Initial state rendered server-side, updated client-side %>
                 <% if (typeof initialTargetGame !== 'undefined' && initialTargetGame) { %>
                    <% const gameState = initialTargetGame; %>
                    <h2 class="text-xl font-semibold text-primary border-b border-gray-200 pb-3 mb-4">Game State: <%= gameState.name %></h2>
                    <div class="space-y-2 text-sm">
                        <div><strong class="text-primary w-24 inline-block">Status:</strong> <%= gameState.status || 'Unknown' %></div>
                        <div><strong class="text-primary w-24 inline-block">Phase:</strong> <%= gameState.currentPhase || 'Unknown' %></div>
                        <div>
                            <strong class="text-primary w-24 inline-block">Deadline:</strong>
                            <% if (gameState.nextDeadline) { %>
                                <% try { const date = new Date(gameState.nextDeadline); %>
                                    <% if (!isNaN(date) && date.getTime() !== 0) { %> <%= date.toLocaleString() %> <% } else { %> <%= gameState.nextDeadline %> <% } %>
                                <% } catch (e) { %> <%= gameState.nextDeadline %> <% } %>
                            <% } else { %> N/A <% } %>
                        </div>
                        <div><strong class="text-primary w-24 inline-block">Variant:</strong> <%= gameState.variant || 'Standard' %> <% if (gameState.options && gameState.options.length > 0) { %>(<%= gameState.options.join(', ') %>)<% } %></div>
                        <div><strong class="text-primary w-24 inline-block">Masters:</strong> <%= gameState.masters && gameState.masters.length > 0 ? gameState.masters.join(', ') : 'N/A' %></div>
                        <div><strong class="text-primary w-24 inline-block">Observers:</strong> <%= gameState.observers ? gameState.observers.length : 'N/A' %></div>

                        <% if (gameState.players && gameState.players.length > 0) { %>
                            <div class="pt-2 mt-2 border-t border-gray-200">
                                <strong class="text-primary block mb-1">Players (<%= gameState.players.length %>):</strong>
                                <ul class="space-y-1 pl-2">
                                    <% gameState.players.sort((a,b) => (a.power || '').localeCompare(b.power || '')).forEach(p => { %>
                                        <li class="<%= p.email === email ? 'font-semibold text-blue-700' : '' %>">
                                            <%= p.power || '???' %>:
                                            <% if (p.status && p.status !== 'Playing' && p.status !== 'Waiting') { %> <span class="<%= ['CD', 'Resigned', 'Abandoned', 'Eliminated'].includes(p.status) ? 'text-red-600' : 'text-gray-600' %>">(<%= p.status %>)</span> <% } else if (p.status === 'Waiting') { %> <span class="text-orange-600">(Waiting)</span> <% } %>
                                            <% if (p.email && (!gameState.settings || !gameState.settings.gunboat)) { %> <span class="text-gray-500 text-xs ml-1">(<%= p.email %>)</span> <% } %>
                                        </li>
                                    <% }); %>
                                </ul>
                            </div>
                        <% } else { %> <div><strong class="text-primary w-24 inline-block">Players:</strong> N/A</div> <% } %>

                         <% if (gameState.settings && Object.keys(gameState.settings).length > 0) { %>
                            <div class="pt-2 mt-2 border-t border-gray-200">
                                <strong class="text-primary block mb-1">Settings:</strong>
                                <ul class="space-y-1 pl-2 text-xs">
                                     <% Object.entries(gameState.settings).forEach(([key, value]) => { %>
                                        <li><%= key.charAt(0).toUpperCase() + key.slice(1) %>: <%= typeof value === 'boolean' ? (value ? 'Yes' : 'No') : value %></li>
                                     <% }); %>
                                </ul>
                            </div>
                         <% } %>
                    </div>
                     <p class="text-xs text-gray-500 mt-4">(State last updated: <%= gameState.lastUpdated ? new Date(gameState.lastUpdated * 1000).toLocaleString() : 'N/A' %>)</p>
                     <a href="https://www.floc.net/observer.py?partie=<%= gameState.name %>" target="_blank" rel="noopener noreferrer" class="text-sm text-primary hover:text-primary/80 mt-4 inline-block underline">View on Floc.net Observer</a>
                 <% } else { %>
                     <p class="text-gray-600 italic">Select a target game to view its state.</p>
                 <% } %>
            </div>
        </div>
    </div>
</div>

<%# Client-side script specific to this page is now handled globally in client.js %>
<%- contentFor('scripts') %>
<%# No dashboard-specific scripts needed here anymore %>
